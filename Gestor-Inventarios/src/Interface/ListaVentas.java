/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author esauj
 */
public class ListaVentas extends javax.swing.JFrame {

    /**
     * Creates new form ListaVentas
     */
    public ListaVentas() {
        initComponents();
        setLocationRelativeTo(null);
        llenarTablaVentas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductoslista = new javax.swing.JTable();
        btnNuevaVenta = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("LISTA DE VENTAS");

        tblProductoslista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Fecha", "Total Venta"
            }
        ));
        jScrollPane1.setViewportView(tblProductoslista);

        btnNuevaVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/resources/imgs/producto.png"))); // NOI18N
        btnNuevaVenta.setText("NUEVA VENTA");
        btnNuevaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaVentaActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/resources/imgs/exit.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente :");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/resources/imgs/firmar.png"))); // NOI18N
        jButton1.setText("EDITAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalir))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(27, 27, 27)
                                .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(751, 751, 751)
                        .addComponent(btnNuevaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnSalir)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuevaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaVentaActionPerformed
        String nuevoIdVenta = generarNuevoIdVenta();

        // Paso 2: Guardar el nuevo ID de venta junto con la fecha y hora actuales en el archivo listaVentas.txt
        if (agregarVenta(nuevoIdVenta)) {  // Cambiamos la llamada a agregarVenta para verificar el resultado
            // Solo se levanta la vista si agregarVenta fue exitoso
            this.dispose();
            Ventas ventas = new Ventas();
            ventas.setIdVenta(nuevoIdVenta);

            // También se establece el nombre del cliente
            ventas.setCliente(txtCliente.getText().trim());

            ventas.setVisible(true);
        }

    }//GEN-LAST:event_btnNuevaVentaActionPerformed

    private boolean agregarVenta(String idVenta) {
        // Obtener el cliente del campo txtCliente
        String cliente = txtCliente.getText().trim(); // Obtener el cliente y eliminar espacios

        // Verificar si el nombre del cliente está vacío
        if (cliente.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingresa un nombre de cliente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return false; // Retornar falso si el cliente no está ingresado
        }

        // Obtener la fecha y hora actuales
        LocalDateTime fechaActual = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        String fechaFormateada = fechaActual.format(formatter);

        // Formato del archivo: id, cliente, fecha, total (vacío por ahora)
        String registroVenta = idVenta + "|" + cliente + "|" + fechaFormateada + "| |";

        try (BufferedWriter bw = new BufferedWriter(new FileWriter("listaVentas.txt", true))) {
            bw.write(registroVenta);
            bw.newLine(); // Nueva línea para separar registros
        } catch (IOException e) {
            e.printStackTrace();
        }

        return true; // Retornar verdadero si la venta se agregó exitosamente
    }

    private String generarNuevoIdVenta() {
        int maxId = 0;

        File archivo = new File("listaVentas.txt");
        if (archivo.exists()) {
            try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
                String linea;
                while ((linea = br.readLine()) != null) {
                    // Suponiendo que el ID es el primer dato separado por "|"
                    String[] datos = linea.split("\\|");
                    // Verificar que el ID empiece con "V"
                    if (datos[0].startsWith("V")) {
                        // Remover la "V" para obtener el número y compararlo
                        int idVenta = Integer.parseInt(datos[0].substring(1));
                        if (idVenta > maxId) {
                            maxId = idVenta;
                        }
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        // Incrementar el ID máximo para obtener un nuevo ID y agregar la "V"
        return "V" + (maxId + 1);
    }

    private void llenarTablaVentas() {
        // Definimos el modelo de la tabla

        DefaultTableModel model = (DefaultTableModel) tblProductoslista.getModel();

        // Limpiamos la tabla antes de llenarla
        model.setRowCount(0);

        File archivo = new File("listaVentas.txt");

        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea;
            // Leer cada línea del archivo
            while ((linea = br.readLine()) != null) {
                // Dividir la línea en los diferentes valores
                String[] partes = linea.split("\\|");
                // Agregar los valores como una nueva fila en la tabla
                model.addRow(partes);

            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    /*
// Método para levantar la vista de venta
private void levantarVistaDeVenta(String nuevoIdVenta) {
    // Aquí iría el código para abrir la vista de ventas, pasando el nuevoIdVenta como parámetro
    // por ejemplo:
    VistaVenta nuevaVenta = new VistaVenta(nuevoIdVenta); // Esto depende de cómo esté implementada tu vista
    nuevaVenta.setVisible(true);
}
  

     */

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
        Menu menu = new Menu();
        menu.setVisible(true);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // Obtener la fila seleccionada
        int filaSeleccionada = tblProductoslista.getSelectedRow(); // Obtener el índice de la fila seleccionada

        // Verificar si se ha seleccionado alguna fila
        if (filaSeleccionada != -1) {
            // Obtener el ID de la columna 0 de la fila seleccionada
            String idVenta = tblProductoslista.getValueAt(filaSeleccionada, 0).toString();

            // Obtener el nombre del cliente de la columna 1
            String nombreCliente = tblProductoslista.getValueAt(filaSeleccionada, 1).toString();

            // Establecer el ID en el campo txtVenta de la vista Ventas
            this.dispose();
            Ventas ventas = new Ventas(); // Asegúrate de tener acceso a la instancia correcta de Ventas
            ventas.setIdVenta(idVenta);
            ventas.setCliente(nombreCliente); // Método que debes crear para establecer el cliente
            ventas.setVisible(true); // Mostrar la vista de ventas si es necesario

            // Si necesitas cerrar la ventana actual, puedes hacerlo aquí
            // this.dispose(); 
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila para editar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNuevaVenta;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProductoslista;
    private javax.swing.JTextField txtCliente;
    // End of variables declaration//GEN-END:variables
}
